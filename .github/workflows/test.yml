name: Lint and Test

on:
  push:
    branches-ignore: ["main"]

jobs:
  repo_ids:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.repo_ids.outputs.REPO_NAME }}
      org_name: ${{ steps.repo_ids.outputs.ORG_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get repository identifiers
        id: repo_ids
        run: |
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          ORG_NAME=$(echo "${{ github.event.repository.owner.name }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_OUTPUT
          echo "ORG_NAME=$ORG_NAME" >> $GITHUB_OUTPUT

  lint:
    name: Run lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: poetry
      - name: Install Packages
        run: poetry install --no-interaction --no-ansi
      - name: Lint
        run: poetry run flake8

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: poetry
      - name: Install Packages
        run: poetry install --no-interaction --no-ansi
      # - name: Setup dependencies
      #   run: export PYTHONPATH="${PYTHONPATH}:./src"
      - name: Run tests
        run: poetry run pytest -v -s -W ignore::DeprecationWarning

  check-version:
    name: "Check version"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check version
        id: get_version
        uses: digicatapult/check-version@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          package_manager: "poetry"

  build-docker: 
    name: "Build docker image"
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [repo_ids, lint, tests]
    steps:
      - uses: actions/checkout@v4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: "--debug"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/${{ needs.repo_ids.outputs.org_name }}/${{ needs.repo_ids.outputs.repo_name }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.title=${{ needs.preconditions.outputs.repo_name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ needs.check-version.outputs.build_date }}